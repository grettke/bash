* Provision
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:8A1F73F9-332A-46CD-A339-AFCD19EE466C
:END:
** Global
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A9BD0A2F-5066-4349-8DB3-20E58925B2E5
:END:

*** BashCore
:PROPERTIES:
:header-args: :noweb-ref BashCore
:ID:       org_gcr_2017-05-12_mara:F5ED8B16-23A9-4FB2-88A8-A340984AF656
:END:

Define this system using Bash 4.3.* features. Warn if not at least.

#+NAME: org_gcr_2017-05-12_mara_347A5539-7A7D-4802-8147-B3AE55F068F5
#+BEGIN_SRC sh
emaj=4
emin=3
amaj=${BASH_VERSINFO[0]}
amin=${BASH_VERSINFO[1]}
if [[ $amaj -lt $emaj || $amin -lt $emin ]]; then
    printf "\e[31mFYI: Using Bash v$amaj.$amin.x but expecting Bash >= v$emaj.$emin.x\e[0m\n" 1>&2
fi
unset emaj
unset emin
unset amaj
unset amin
#+END_SRC

**** Options
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:17314013-60AE-48F8-BF54-CAF94D285E32
:END:
***** Expressivity
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:BAED844A-0444-40DE-9052-F5DCFD0BF1C9
:END:

Programatically generate expressions (Brace Expansion) using
- Sequence of comma separated names
- Pattern matching to create a list of names of files
- Sequence expression

#+NAME: org_gcr_2017-05-12_mara_0E6696C1-1C98-4DDE-92E7-8939C9EE9AD7
#+BEGIN_SRC sh
set -o braceexpand
#+END_SRC


Define key-pair values for command's dynamic extent before calling the command
and nowhere else. Doing otherwise breaks ~alias~ for example in a surprising way.

#+NAME: org_gcr_2017-05-12_mara_926D405F-5873-4A24-8FC4-7EBA0461B931
#+BEGIN_SRC sh
set +o keyword
#+END_SRC

***** Fail Fast
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:EE650225-E984-4C7D-8D73-B027A50000BD
:END:

Exit immediately when a command in a pipeline fails. Assume the worst. If the
result of calling the failed command is not an emergency, then find the
parameter for that command which prevents it from reporting a failure. This
looks like an extreme configuration decision, but it isn't. The behavior is
disabled for the following expected situations where the command is

- Exceptions
  - in ~while~ or ~until~ block
  - is part of an ~if~ test
  - short-circuit evaluation
    - surprised at this behavior!
    - but for the last command
  - any command in a pipeline but the last
    - surprised at this behavior!
  - having it's return status inverted by ~!~
- This seems strange; I read this as we won't get the desired behavior during a
  sequence of express and that is the exact place where we want that behavior.
  Perform research on this.

When an error occurs remain in the shell so that the system operator can
research wha happened in that context. Don't exit the shell because there was
an error. Enabling this causes the shell to exit immediately.

#+NAME: org_gcr_2017-05-12_mara_79BFD638-FE36-4CFF-A0E5-853A1DC3232C
#+BEGIN_SRC sh
set +o errexit
#+END_SRC

The result of a pipeline is the result of the last expression to exit on error
or zero if they all completed successfully. This reads like "short circuit"
evaluation but I'm not sure it is. Perform research on this.

#+NAME: org_gcr_2017-05-12_mara_860A07FB-3B57-46CA-A611-279FFEC2E648
#+BEGIN_SRC sh
set -o pipefail
#+END_SRC

When there are no file matches found report an error.

#+NAME: org_gcr_2017-05-12_mara_6C8B18D4-BCA4-4567-A837-F8026C4BD773
#+BEGIN_SRC sh
shopt -s failglob
#+END_SRC

Report an error when you ~shift~ more parameters than you received.

#+NAME: org_gcr_2017-05-12_mara_041DA23E-092A-4105-ACDF-DC4B6DE3395C
#+BEGIN_SRC sh
shopt -s shift_verbose
#+END_SRC

***** Inheritance
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:468DE01C-7493-4307-8CF2-1C736E06F38A
:END:

Every change (creation and modification) made to the parent shell
environment (functions and variables) should be automatically exported to every
child shell environment.

#+NAME: org_gcr_2017-05-12_mara_049B118A-2116-433B-A615-7562BB6EA96A
#+BEGIN_SRC sh
set -o allexport
#+END_SRC

Do the same thing for the ~ERR~ trap.

#+NAME: org_gcr_2017-05-12_mara_24CEAF97-19A1-4A8B-B117-5947FFCE0205
#+BEGIN_SRC sh
set -o errtrace
#+END_SRC

Do the same thing for the ~DEBUG~ and ~RETURN~ traps.

#+NAME: org_gcr_2017-05-12_mara_46496694-A8A2-4FDC-8DBF-904D2428F4A3
#+BEGIN_SRC sh
set -o functrace
#+END_SRC

Pass a non-directory arguments to =cd= and change to the value of that variable.

#+NAME: org_gcr_2017-05-12_mara_3B144B8C-033E-4774-9C05-E10A41AD5FCD
#+BEGIN_SRC sh
shopt -s cdable_vars
#+END_SRC

***** Job Control
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:7532ECDF-3E4A-4A4E-B522-6507E1636AB2
:END:

Enable it.

#+NAME: org_gcr_2017-05-12_mara_F84A7422-909B-4535-AD90-A88859A3FDE4
#+BEGIN_SRC sh
set -o monitor
#+END_SRC

Immediately report terminated job status. This might appear to be a Interactive
feature, but it isn't. It appears hear reporting errors in the log file
immediately realizing this Bash configurations "Fail Fast" goal.

#+NAME: org_gcr_2017-05-12_mara_8CA20790-92D6-48E9-8842-725DB3340C3E
#+BEGIN_SRC sh
set -o notify
#+END_SRC

***** No Surprises
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A8FF6C86-EFD8-46E3-AB92-9D19ECB235A8
:END:

Provide but disable interactive debugging by default.

Instead force children to change their configuration script,
run with ~bash --debugger~ or set ~shopt -s extdebug~.

#+NAME: org_gcr_2017-05-12_mara_3E52EBAC-15FB-4E4D-A62B-F12B389E3548
#+BEGIN_SRC sh
shopt -u extdebug
#+END_SRC

Log files are often identified as important only after accidentally clobbering
them. Make stomping visible  by first deleting them and then writing them
out again. Doing so is easy to automate and searchable.

#+BEGIN_QUOTE
Prevent output redirection using ‘>’, ‘>&’, and ‘<>’ from overwriting existing
files.
#+END_QUOTE

#+NAME: org_gcr_2017-05-12_mara_CECC73AC-BD9D-4F6B-BA3C-23C5E0A3DAF5
#+BEGIN_SRC sh
set -o noclobber
#+END_SRC

Referencing an undefined variable or parameter should generate an error because
the program can not run as intended. The system should fail-fast. Only use this
in individual shell scripts; not the global configuration because doing so
prevents Bash system initialization by preventing you to define any new
variables and dying!

#+NAME: org_gcr_2017-05-12_mara_BDEC9D0A-D1B0-4488-8EE0-E0E665EA1641
#+BEGIN_SRC sh
# set -o nounset
#+END_SRC

Assume that the user (computer or human) provided the correct directory-name
arguments to a command and do not modify them. Auto-correction of directory
names can *at best* cause *complete disaster* for a distracted operator.

#+NAME: org_gcr_2017-05-12_mara_3C1B99B3-CCE4-4C50-ABC2-FCED3C882B9A
#+BEGIN_SRC sh
shopt -u cdspell
#+END_SRC

For directories, too.

#+NAME: org_gcr_2017-05-12_mara_5B6D47E6-FB08-4398-B788-D1BF2BCBA57A
#+BEGIN_SRC sh
shopt -u dirspell
#+END_SRC

Put temporary files in one place.

#+NAME: org_gcr_2017-05-12_mara_C00DD046-CF32-412B-BF19-054E49A3CF88
#+BEGIN_SRC sh
TMPDIR='/tmp'
#+END_SRC

***** Performance
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:AFB6A8B2-AFB2-4850-BF4D-87040E93222C
:END:

Cache recently executed command source locations in a lookup table and search
that before searching the lookup path to find a command.

#+NAME: org_gcr_2017-05-12_mara_753ED6DC-B506-4619-939C-0172E6F2C263
#+BEGIN_SRC sh
set -o hashall
shopt -s checkhash
#+END_SRC

**** Variables
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:9F0DDF78-01AB-4C68-9027-1852624E3851
:END:

***** Encoding
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:8DABD7BF-387E-4CCB-8242-AD3B3A8D0368
:END:

Use UTF-8 for everything.

Emacs will use this but will override it with settings in your init file.

Read more about how locale variables work in its man page. Only =LC_ALL= is
required if all of your settings are the same.

Set anything un-set.

#+NAME: org_gcr_2017-05-12_mara_E4AF0A48-8164-47D4-8250-1C8D94440751
#+BEGIN_SRC sh
LANG='en_US.UTF-8'
#+END_SRC

Override everything

#+NAME: org_gcr_2017-05-12_mara_28B1D8B4-4298-4DA4-AB9D-0BFA13F5DAEB
#+BEGIN_SRC sh
LC_ALL='en_US.UTF-8'
#+END_SRC

Sor how you expect it.

#+NAME: org_gcr_2017-05-12_mara_DADA4A0B-F5B1-4DAA-A31A-1D45EE775A9E
#+BEGIN_SRC sh
LC_COLLATE='POSIX'
#+END_SRC

Verify encoding.

#+NAME: org_gcr_2017-05-12_mara_FD9EBF97-7D75-4F70-B775-097170AD8738
#+BEGIN_SRC sh
if [ "$(locale charmap)" == "UTF-8" ]; then
    echo "Character encoding expected to be 'UTF-8' and found it to be CORRECT."
else
  echo "Character encoding expected to be 'UTF-8' and found it to be INCORRECT as $(locale charmap)."
fi
#+END_SRC

***** Fontconfig
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:CA259BBD-7D76-4C57-BA3F-B8E1437C773E
:END:

[[https://www.freedesktop.org/software/fontconfig/fontconfig-devel/fcconfigfilename.html][Configure Fontconfig]].

#+NAME: org_gcr_2017-05-12_mara_E6EE4FDA-2B48-40E6-B46C-90D52A5F09B2
#+BEGIN_SRC sh
FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig
#+END_SRC

*** BashNonInteractiveCore
:PROPERTIES:
:header-args: :noweb-ref BashNonInteractiveCore
:ID:       org_gcr_2017-05-12_mara:C8D58FA9-17C0-4474-AB1E-540F715C4970
:END:

Only use this functionality in a non-interactive session.

#+NAME: org_gcr_2017-05-12_mara_E102B51D-9068-41F6-8731-760FD49FFB95
#+BEGIN_SRC sh
if [ "$PS1" ]; then
    printf "Expected a non-interactive shell.\n" 1>&2
    sleep 5
    exit 1
fi
#+END_SRC

Never take input from the user interactively and disable the use of those
commands.

#+NAME: org_gcr_2017-05-12_mara_6E441F28-E8CC-44D8-B01B-CF548D36A502
#+BEGIN_SRC sh
unset -f read select
#+END_SRC

Aliases are only for interactive users.

#+NAME: org_gcr_2017-05-12_mara_2573D577-8D1B-41AB-A384-E148098FF9DC
#+BEGIN_SRC sh
shopt -u expand_aliases
#+END_SRC

*** BashInteractiveCore
:PROPERTIES:
:header-args: :noweb-ref BashInteractiveCore
:ID:       org_gcr_2017-05-12_mara:4825F69D-14A3-43DB-A7FE-A49C3C038F95
:END:

Only use this functionality in an interactive session.

#+NAME: org_gcr_2017-05-12_mara_7AA5536F-EF97-4CE9-94DB-CB3438CBA65F
#+BEGIN_SRC sh
if [ -z "$PS1" ] && [ -z "$DISPLAY" ]; then
    printf "Expected an interactive shell.\n" 1>&2
    sleep 5
    exit 1
fi
#+END_SRC

Use ~echo -e~ instead of ~printf~ to prevent Bash from interpreting the values as
escape sequences.

**** Options
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:ADA5B8DA-2E4D-45F5-84E9-F71F51B37195
:END:
***** Expressivity
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:D707713A-4856-48D5-A32E-FF51DFE23E39
:END:

Programatically complete command options.

#+NAME: org_gcr_2017-05-12_mara_7ED1D23A-73A8-4053-AE6E-D002E9A955A8
#+BEGIN_SRC sh
shopt -s progcomp
#+END_SRC

Aliases are only for interactive users.

#+NAME: org_gcr_2017-05-12_mara_EC6DAFA7-D87A-4612-BB16-D7B881FC2345
#+BEGIN_SRC sh
shopt -s expand_aliases
#+END_SRC

***** History
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:171CCA0F-7C83-44F5-8A67-76976D7923C4
:END:

Enable command history.

#+NAME: org_gcr_2017-05-12_mara_FEFE92C2-FA92-4E2B-A04A-D52E5F22F9AE
#+BEGIN_SRC sh
set -o history
#+END_SRC

Enable ~!~ substitution.

#+NAME: org_gcr_2017-05-12_mara_3254D394-D9E8-424F-A731-DD6CC0E260F4
#+BEGIN_SRC sh
set -o histexpand
#+END_SRC

Easily re-edit historical multi-line commands.

#+NAME: org_gcr_2017-05-12_mara_BFC4B457-8C68-41EF-80FD-75AB86823392
#+BEGIN_SRC sh
shopt -s cmdhist
#+END_SRC

Separate lines with newline characters

#+NAME: org_gcr_2017-05-12_mara_194963F2-30A3-46F2-818F-62230144A793
#+BEGIN_SRC sh
shopt -s lithist
#+END_SRC

***** Interface
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A090CEA5-4D16-4527-865A-2DBED7424266
:END:

Use EMACS keybindings for ~Readline~ and ~read~.

#+NAME: org_gcr_2017-05-12_mara_1E0347AC-0211-4347-8022-E1F48CBD4E82
#+BEGIN_SRC sh
set -o emacs
#+END_SRC

When the command name is a directory in the =$PWD= pass it to =cd=.

#+NAME: org_gcr_2017-05-12_mara_A0DF3FF8-7752-4343-AC5A-3EDC967D7A72
#+BEGIN_SRC sh
shopt -s autocd
#+END_SRC

Refresh ~LINES~ and ~COLUMNS~ after every command.

#+NAME: org_gcr_2017-05-12_mara_FA8774A1-F091-4079-A388-9B421AC8D60D
#+BEGIN_SRC sh
shopt -s checkwinsize
#+END_SRC

Automatically complete directory-names and replace the original name value.

#+NAME: org_gcr_2017-05-12_mara_BA4FF735-8A1F-4F21-A210-17EAF843906F
#+BEGIN_SRC sh
shopt -s complete_fullquote
#+END_SRC

Enable comments.

#+NAME: org_gcr_2017-05-12_mara_D180576A-276D-4DE5-9D29-7564F2475A96
#+BEGIN_SRC sh
shopt -s interactive_comments
#+END_SRC

Prompt zero is displayed after you enter a command and before the command is
executed.

Make the session easier to read.

#+NAME: org_gcr_2018-01-05_mara_A846E613-BE6C-4EB3-A35B-3CBBB8BBE534
#+BEGIN_SRC sh
PS0='OK...\n\n'
#+END_SRC

Prompt one is the one that you see all the time.

Show enough to stay out of trouble.

#+NAME: org_gcr_2017-05-12_mara_CCFF46E0-5F46-4B41-A7F3-E6FCF6729895
#+BEGIN_SRC sh
PS1='\u@\h:\w$(__git_ps1 "(%s)")⮞ '
#+END_SRC

Prompt two is the one that you see when you break a command into
multiple lines.

Emphasize what is happening because I usually end up here accidentally.

#+NAME: org_gcr_2017-05-12_mara_FB232A77-A71E-42AD-B676-4B075ECA02B8
#+BEGIN_SRC sh
PS2='(continued)⮞ '
#+END_SRC

Prompt three is the one that you see when you are presented with a menu
created using the ~select~ function.

You see it when ~select~ makes you to make a selection.

The following [[https://askubuntu.com/questions/1705/how-can-i-create-a-select-menu-in-a-shell-script][example]] demonstrates its use:

#+BEGIN_EXAMPLE
PS3='Please enter your choice: '
options=("Option 1" "Option 2" "Option 3" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Option 1")
            echo "you chose choice 1"
            ;;
        "Option 2")
            echo "you chose choice 2"
            ;;
        "Option 3")
            echo "you chose choice 3"
            ;;
        "Quit")
            break
            ;;
        *) echo invalid option;;
    esac
done
#+END_EXAMPLE

#+NAME: org_gcr_2017-05-12_mara_E1274B85-D3B6-467B-AF20-1C88338478CC
#+BEGIN_SRC sh
PS3='Please make a selection: '
#+END_SRC

Prompt four is what you see when you enable debugging with ~set -x~.

I copied this from the documentation.

#+NAME: org_gcr_2017-05-12_mara_3E7AA843-749F-48B1-B433-467C0848C9AF
#+BEGIN_SRC sh
PS4='(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]} - [${SHLVL},${BASH_SUBSHELL}, $?]
'
#+END_SRC

***** Job Control
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:EEDDBEB4-0052-45DF-A0BE-88BE230308C9
:END:

Never exit a shell when there are still running or stopped jobs.

#+NAME: org_gcr_2017-05-12_mara_02C16377-D022-4394-BC8D-C24ADFDE4E0D
#+BEGIN_SRC sh
shopt -s checkjobs
#+END_SRC

Send =HUP= to all child processes when the interactive parent shell exits.

#+NAME: org_gcr_2017-05-12_mara_1E64FD25-CB5D-4B05-87DE-E36F6B342332
#+BEGIN_SRC sh
shopt -s huponexit
#+END_SRC

***** No Surprises
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:BF8365A6-5F55-4A16-9D0D-F4F7C7321779
:END:

It is too easy to accidentally leave a shell by typing Control-D. Prevent it.

#+NAME: org_gcr_2017-05-12_mara_507EB29B-354F-4391-941C-9674B1706C4E
#+BEGIN_SRC sh
set -o ignoreeof
#+END_SRC

Never attempt to complete a command in the contents of =PATH= when nothing is
typed in.

#+NAME: org_gcr_2017-05-12_mara_843EB944-DB5E-4CAC-9EA5-F2901D7B74B4
#+BEGIN_SRC sh
shopt -s no_empty_cmd_completion
#+END_SRC

**** Variables
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:679E2DA0-0A15-4A85-A034-8631D8F0594A
:END:

***** History
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:1819D813-3D7D-4F5D-99ED-D49932E5A265
:END:

Exclude history of commands starting with a space. Commands entered multiple
times are important; keep their history (don't erase them).

Ignore every command that
- Starts with any number of spaces
- Starts with any number of tabs

#+NAME: org_gcr_2017-05-12_mara_E452AE63-E6F8-484E-B7F6-84E6546F5359
#+BEGIN_SRC sh
HISTIGNORE='[ \t]*'
#+END_SRC

Keep a rich and expansive history.

#+NAME: org_gcr_2017-05-12_mara_8359BDC0-45BD-47FB-95D6-C0E6C769D5F7
#+BEGIN_SRC sh
HISTSIZE=31102
#+END_SRC

Track history with basically a ISO-8601 timestamp.

#+NAME: org_gcr_2017-05-12_mara_6F77C1D2-0666-4DC1-A12D-3DF4763FAA8C
#+BEGIN_SRC sh
HISTTIMEFORMAT='%Y-%m-%d_%H-%M-%S '
#+END_SRC

***** Interface
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:FD057DE3-4E73-402A-8D37-F0B4413F17CC
:END:

Usually you know what directory you are sitting in so only show that.

Turn it off or on for 1-3 or all directories.

#+NAME: org_gcr_2017-05-12_mara_5F5E4AA5-A0FF-460B-BBE8-1AB700BCA964
#+BEGIN_SRC sh
PROMPT_DIRTRIM=1
alias 1dir='PROMPT_DIRTRIM=1'
alias 2dir='PROMPT_DIRTRIM=2'
alias 3dir='PROMPT_DIRTRIM=3'
alias ndir='PROMPT_DIRTRIM=0'
#+END_SRC

** Global Shell Configuration Files
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:0D578995-CDE4-4247-9FE3-EDDBDFB6FB22
:END:

*** Non-Interactive
:PROPERTIES:
:header-args: :tangle ./.bash_global_non_interactive
:ID:       org_gcr_2017-05-12_mara:DB3A9415-85FC-46FD-BF39-F723E5235C3C
:END:

#+NAME: org_gcr_2017-05-12_mara_67873436-0189-42A6-ADB2-B6471031D04B
#+BEGIN_SRC sh :comments no
# -*- mode: sh; -*-
#+END_SRC

Every Bash session requires the same configuration.

#+NAME: org_gcr_2017-05-12_mara_0E1CBFBF-952B-45E4-8874-3B5A33EC821E
#+BEGIN_SRC sh
⟪BashCore⟫
#+END_SRC

Only non-interactive sessions requires this configuration.

#+NAME: org_gcr_2017-05-12_mara_4351B96D-D0E6-4132-B80A-0385F6367429
#+BEGIN_SRC sh
⟪BashNonInteractiveCore⟫
#+END_SRC

*** Interactive
:PROPERTIES:
:header-args: :tangle ./.bash_global_interactive
:ID:       org_gcr_2017-05-12_mara:1E8A5E47-9189-40EB-A9B9-8D4835775A7A
:END:

#+NAME: org_gcr_2017-05-12_mara_06661C55-0548-444F-B1F5-6C8B4CD0B2EE
#+BEGIN_SRC sh :comments no
# -*- mode: sh; -*-
#+END_SRC

Every Bash session requires the same configuration.

#+NAME: org_gcr_2017-05-12_mara_D2BF3725-6200-4F81-A5C0-F84290C166E7
#+BEGIN_SRC sh
⟪BashCore⟫
#+END_SRC

Only interactive sessions requires this configuration.

#+NAME: org_gcr_2017-05-12_mara_F379D438-E41D-4E79-A05F-75D394D7D626
#+BEGIN_SRC sh
⟪BashInteractiveCore⟫
#+END_SRC

** Login Shell Configuration Files
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:BCD75F93-7AD8-49D6-A5CF-EF2AC6769098
:END:

*** BashProfile
:PROPERTIES:
:header-args: :tangle ./.bash_login
:ID:       org_gcr_2017-05-12_mara:93967906-378F-4A5B-B53F-1068F93DF8BB
:END:

#+NAME: org_gcr_2017-05-12_mara_924FD018-EFEB-41F8-9F87-C37C2DE7D115
#+BEGIN_SRC sh :comments no
# -*- mode: sh; -*-
#+END_SRC

Execute the same configuration as every non-login interactive shell.

#+NAME: org_gcr_2017-05-12_mara_B768B118-68AB-4224-AD9C-C8FA64B7579B
#+BEGIN_SRC sh
if [ -f ~/.bashrc ]; then . ~/.bashrc; fi
#+END_SRC

Have fun.

#+NAME: org_gcr_2017-05-12_mara_546F0300-CB15-4B7B-A206-20F557201534
#+BEGIN_SRC sh
fortune
#+END_SRC

*** BashRc
:PROPERTIES:
:header-args: :tangle ./.bashrc
:ID:       org_gcr_2017-05-12_mara:93E59E15-9E26-4FEE-800A-4DB748AB395F
:END:

#+NAME: org_gcr_2017-05-12_mara_DC49A9A0-404B-4F1A-8B2E-18391BB70B07
#+BEGIN_SRC sh :comments no
# -*- mode: sh; -*-
#+END_SRC

#+NAME: org_gcr_2017-05-12_mara_F255F97F-5EED-4DCF-AAAF-2AC396CEBB4A
#+BEGIN_SRC sh
source ~/.bash_global_interactive
#+END_SRC

VIM is the best system editor.

#+NAME: org_gcr_2017-05-12_mara_3C6E3108-B304-4892-B8A2-21FA6E0F0DAA
#+BEGIN_SRC sh
VISUAL=vim
#+END_SRC

Use VIM for visual non-EMACS environments.

#+NAME: org_gcr_2017-05-12_mara_7F5D8B99-5A33-44C1-949A-435B3326F053
#+BEGIN_SRC sh
EDITOR="$VISUAL"
#+END_SRC

Keep the system provisioning professional.

#+NAME: org_gcr_2017-05-12_mara_ADECF9AF-F8CC-49EB-BFF8-79C5BCC8C052
#+BEGIN_SRC sh
HOMEBREW_NO_EMOJI=1
#+END_SRC

Java.

#+NAME: org_gcr_2017-05-12_mara_3A2D3A90-92BB-4E00-AF68-757B5F8EAB58
#+BEGIN_SRC sh
JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
#+END_SRC

Maven

#+name: org_gcr_2018-06-12T22-56-37-05-00_mara_584316BD-8213-43CC-AE98-4CA68C449A12
#+begin_src sh
MAVEN_OPTS='-Xmx512m'
#+end_src

~go~ stuff.

#+NAME: org_gcr_2017-07-30_mara_89829A40-9CE4-4B35-8D02-581265F85223
#+BEGIN_SRC sh
GOPATH=$HOME/gipeto
alias gck='gometalinter ./...'
#+END_SRC

Easily use EMACS info files.

#+NAME: org_gcr_2017-05-12_mara_33C886C8-3042-462B-A950-56C47183FF5A
#+BEGIN_SRC sh
INFOPATH='/usr/local/share/info:/usr/share/info'
#+END_SRC

Easily use =ccrypt= from EMACS.

#+NAME: org_gcr_2017-05-12_mara_79922A61-22AD-4752-88FC-2E1D2F2ED72E
#+BEGIN_SRC sh
CCRYPT="$(brew --prefix ccrypt)/share/emacs/site-lisp"
#+END_SRC

Easily load Emacs libraries.

#+NAME: org_gcr_2017-05-12_mara_90CE9C25-BFAB-4442-9FCB-8A6D330D90F1
#+BEGIN_SRC sh
LANGTOOL="$(brew --prefix languagetool)/libexec/languagetool-commandline.jar"
DITAA="$(brew --prefix ditaa)/libexec/ditaa0_10.jar"
PLANTUML="$(brew --prefix plantuml)/libexec/plantuml.jar"
#+END_SRC

Use Proselint.

#+NAME: org_gcr_2017-05-12_mara_0774E3DC-02F0-48F8-AB62-5AF40D0FDB9B
#+BEGIN_SRC sh
PROSELINT_HOME='/Users/gcr/proselint'
#+END_SRC

Easily use TeX.

#+NAME: org_gcr_2017-05-12_mara_20BA6772-D19D-44F5-BAD0-90FB3C2EEB2E
#+BEGIN_SRC sh
MACTEX_BIN='/usr/local/texlive/2016/bin/x86_64-darwin'
TEXMFHOME='/Users/gcr/git/gitlab/texmf'
#+END_SRC

Easily access everything.

#+NAME: org_gcr_2017-05-12_mara_FBECC16D-9C81-439D-BEF4-A5414CB6A176
#+BEGIN_SRC sh
PATH="/usr/local/bin:$JAVA_HOME/bin:$MACTEX_BIN:$(go env GOPATH)/bin:$PATH"
#+END_SRC

Use VirtualBox with Vagrant.

#+NAME: org_gcr_2017-05-12_mara_B970B3B2-BB8B-4143-A9B9-5F5D8E76223C
#+BEGIN_SRC sh
VAGRANT_DEFAULT_PROVIDER=virtualbox
#+END_SRC

Docker.

#+NAME: org_gcr_2017-09-07_mara_1F774B7D-A381-4F70-B33A-D6F7B897AC7E
#+BEGIN_SRC sh
alias dm='docker-machine'
alias dsd='docker-machine start default'
eval "$(docker-machine env default 2>/dev/null)"
#+END_SRC

Only allow ~pip~ to install packages with a ~venv~.

#+NAME: org_gcr_2017-05-12_mara_B66F9D4D-9536-4A53-8AED-F338D79F0A3B
#+BEGIN_SRC sh
PIP_REQUIRE_VIRTUALENV=true
#+END_SRC

~gpip~ can install globally though.

#+NAME: org_gcr_2017-05-12_mara_82E4FD7F-D78B-415B-91F4-20B092A63263
#+BEGIN_SRC sh
globalpip() {
  PIP_REQUIRE_VIRTUALENV="" pip2.7 "$@"
}
#+END_SRC

F# brew assembly usage.

#+NAME: org_gcr_2017-08-10_mara_D5452DB9-7EB2-4AA3-8C06-645D7D20EA43
#+BEGIN_SRC sh
MONO_GAC_PREFIX="/usr/local"
#+END_SRC

Git.

#+NAME: org_gcr_2017-07-19_mara_52FD32BE-0395-4D3E-A23B-5F0930296FB7
#+BEGIN_SRC sh
source "$(brew --prefix git)/etc/bash_completion.d/git-completion.bash"
source "$(brew --prefix git)/etc/bash_completion.d/git-prompt.sh"
GIT_PS1_SHOWDIRTYSTATE='1'
GIT_PS1_SHOWSTASHSTATE='1'
GIT_PS1_SHOWUNTRACKEDFILES='1'
GIT_PS1_SHOWUPSTREAM='auto'
alias g='git'
complete -o default -o nospace -F _git g
alias gitunpull='git reset --keep HEAD@{1}'
alias gituncommit='git reset --mixed HEAD^'
alias gitforcepush='git push origin +master'
alias gpom='git push origin master'
alias gp='git status'
function gitgrep {
  if [[ $# -eq 0 || -z "$1" ]] ; then
      printf "Usage: ${FUNCNAME[0]} <search string>\n"
      printf "Searches Git commit history for TEXT.\n"
      return 1
  fi
  local text=$1;
  git log --grep="$text"
}
#+END_SRC

Rbenv.

#+name: org_gcr_2018-02-07_mara_CFFC3D3B-9CEB-4A4D-944D-F479583731EF
#+begin_src sh
eval "$(rbenv init -)"
#+end_src

Bundler.

#+name: org_gcr_2018-02-07_mara_4C3C51ED-F6C8-43C8-9C2F-F608FBDD71F6
#+begin_src sh
alias bx='bundle exec'
#+end_src

Jekyll.

#+name: org_gcr_2018-02-07_mara_D59A4039-DCAC-4354-BBD8-2CBECCFDE185
#+begin_src sh
function bxjekyll {
  bundle exec jekyll "$@"
}
#+end_src
**** Make aliases  [fn:1c2164efcde0346e:http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html] [fn:17380446290dfdc9:https://www.digitalocean.com/community/tutorials/an-introduction-to-useful-bash-aliases-and-functions]
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:160278CE-DE40-44A7-9509-F17B3AD5A43A
:END:
Easily start EMACS.

#+NAME: org_gcr_2017-05-12_mara_2AD22688-DC62-4C39-AB04-A6F6F5BF6790
#+BEGIN_SRC sh
alias pie='emacs'
alias p='emacs --debug-init&'
alias pno='emacs&'
alias pnu='emacs --debug-init -no-desktop -no-init-file --load ~/.emacs.el&'
alias pts="emacs --debug-init --no-init-file --no-splash --background-color white --foreground-color black --vertical-scroll-bars --eval '(switch-to-buffer \"*Messages*\")' --name TEST --title TEST --load ~/src/help/.emacs.el &"
alias pni='emacs --no-init-file&'
alias pcon='emacs -nw --debug-init'
#+END_SRC

Easily start =r=.

#+NAME: org_gcr_2017-05-12_mara_69C0605C-90AA-43E9-9084-CF7E725F21F8
#+BEGIN_SRC sh
alias r='r --no-save'
alias R='r --no-save'
#+END_SRC

Easily activate and deactivate =virtualenv=.

#+NAME: org_gcr_2017-05-12_mara_8BF4303D-351C-4197-A96A-AD5E6B81344D
#+BEGIN_SRC sh
alias vens='virtualenv env'
alias veon='source ./env/bin/activate'
alias veof='deactivate'
#+END_SRC

Good defaults.

#+NAME: org_gcr_2017-05-12_mara_20EA8DAB-53C6-4170-9417-8BCC8A628AEB
#+BEGIN_SRC sh
alias mkdir='mkdir -pv'
alias mount='mount | column -t'
alias df='df -h'
alias du="du -ach"
alias idk='identify *.*'
alias kk='cd ..'
#+END_SRC

Shortcuts.

#+NAME: org_gcr_2017-05-12_mara_A68EF2AE-850B-4A51-82F8-A6017D6E9F93
#+BEGIN_SRC sh
alias h='history'
alias j='jobs -l'
#+END_SRC

No surprises.

#+NAME: org_gcr_2017-05-12_mara_76E0132B-936A-4492-AE87-D77E96B4EFAD
#+BEGIN_SRC sh
alias cd..='cd ..'
#+END_SRC

Get download speed [fn:167e637e4fea0629:https://www.gulshansingh.com/posts/useful-bash-aliases/].

#+NAME: org_gcr_2017-05-12_mara_C59D7D22-E7E2-48EE-BE47-0DDB237D6A9C
#+BEGIN_SRC sh
alias speedtest='wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test500.zip'
#+END_SRC

I accidentally type =cd= instead of =cd ..=. I want to return to my original
working directory and I'm irritated because I'm lazy and I don't want to type
=cd $OLDPWD=. Don't get rid of =cd= though because I do use it and it is faster
than =cd ~/=.

#+NAME: org_gcr_2017-05-12_mara_CC3E03CE-A882-4AB1-9BBF-A2C49F4F3A0A
#+BEGIN_SRC sh
alias bk="cd $OLDPWD"
#+END_SRC

Always use ~Bash~ *never* use the default shell.

#+NAME: org_gcr_2017-05-12_mara_9D66A8AA-5E98-4977-86B8-30670147F43C
#+BEGIN_SRC sh
alias sh='/usr/local/bin/bash'
#+END_SRC

Listing by modification forward and backward.

#+NAME: org_gcr_2017-09-16_mara_02B42BEB-94A4-451C-AFDF-7110D2AB6A15
#+BEGIN_SRC sh
alias lsmd='ls -haltr'
alias lsmdm='ls -halt'
#+END_SRC

Brew

#+NAME: org_gcr_2018-01-25_mara_2F096D97-E290-454E-9D05-10E81AA9C21D
#+BEGIN_SRC sh
alias brupdate='brew update && brew upgrade --cleanup'
alias brcleanupq='brew cleanup --dry-run'
alias brcleanupr='brew cleanup'
#+END_SRC

Elpa.

#+name: org_gcr_2018-01-30_mara_7B5D1FA6-610E-481A-A894-4DC7938C7EF0
#+begin_src sh
function emackup() {
  cd ~/.emacs.d
  git add .
  git commit -m "Automated versioning"
  git push
  cd
}
#+end_src

Words.

#+NAME: org_gcr_2018-01-25_mara_8B0003EB-53D4-44C0-8793-8EDA3FACA8B1
#+BEGIN_SRC sh
alias randomword='gshuf -n1 /Users/gcr/git/github-anonymous/english-words/words.txt'
#+END_SRC

XQuartz.

#+name: org_gcr_2018-02-25_mara_0B1A220A-45FA-48A9-8F9E-774D3EDB1E7B
#+begin_src sh
alias xwnlst='wmctrl -G -l'
function xwnhom {
  local gravity=0;
  local x=100;
  local y=100;
  local w=200;
  local h=200;
  if [[ $# -eq 0 || -z "$1" ]] ; then
      printf "Usage: ${FUNCNAME[0]} <WindowTitle>\n"
      printf "Moves window to $x,$y and resizes it to $w,$h.\n"
      return 1
  fi
  local window_name=$1;
  wmctrl -r "$window_name" -e "$gravity","$x","$y","$w","$h"
}
#+end_src

Toggle grayscale.

#+name: org_gcr_2018-04-16T16-05-56-05-00_mara_406331AB-CB69-485A-8AB8-F6D4EF73A23A
#+begin_src sh
alias togglegrayscale='osascript /Users/gcr/util/Toggle-Grayscale.scpt'
#+end_src

Invert colors.

#+name: org_gcr_2018-04-16T16-05-56-05-00_mara_28CFFB4F-74C5-450D-9635-BB7F26BE348D
#+begin_src sh
alias invertcolors='osascript /Users/gcr/util/Invert-Colors.scpt'
#+end_src

Start screensaver.

#+name: org_gcr_2018-04-16T17-08-48-05-00_mara_6503B49F-2198-4799-A802-56A6A3291E5A
#+begin_src sh
alias sav='osascript /Users/gcr/util/Start-Screensaver.scpt'
#+end_src
Image things.

#+name: org_gcr_2018-03-31T20-45-48-05-00_mara_837EEC36-0DC3-4E89-B814-C7B345BF4D13
#+begin_src sh
alias optalljpg='jpegoptim *.jpg --strip-all'
alias exiflist='exiftool'
alias exifwipe='exiftool -all= -overwrite_original'
#+end_src
**** Make Functions
:PROPERTIES:
:ID:       org_gcr_2017-10-07_mara:8EA38DF8-28EE-4D10-B1CF-0C5B24BB2F70
:END:
Get the NTH line of a FILE via https://stackoverflow.com/questions/6022384/bash-tool-to-get-nth-line-from-a-file

#+NAME: org_gcr_2017-10-07_mara_E5581884-EE63-457F-BE00-C5AAA3A68C31
#+BEGIN_SRC sh
function nthlineof {
  if (( "$#" < 2 )); then
      echo 'Print the NTH line of FILE'
      echo "Usage: ${FUNCNAME[0]} NTH FILE"
      return 1
  fi
  tail -n+"$1" "$2" | head -n1
}
#+END_SRC

Wait for Alpha seconds before saying Beta.

#+name: org_gcr_2018-01-29_mara_4AD96067-259F-46FD-999B-EDD1B388C5BE
#+begin_src sh
function wtndsyndntfy() {
  if (($# <= 2)); then
      printf "Usage: ${FUNCNAME[0]} minutes words...\n"
      return 1
  else
    local minutes="$1"
    local seconds=$((minutes * 60))
    local words="${@:2}"
    local message="$(echo \"${words[*]}\")"
    printf "Waiting for minute(s): %s\n" $minutes
    printf "Before saying and notifying: $message\n"
    printf "Started waiting on: $(date)\n"
    printf "(Type Control+C to quit)\n"
    trap 'echo "Saying it immediately."' INT
    sleep "$seconds"
    say "$message"
    terminal-notifier -message "$message"
    return 0
  fi
}
#+end_src

Tmux

#+name: org_gcr_2018-05-10T15-49-02-05-00_mara_CE25C6C2-27E5-4AC2-93ED-724EC591025C
#+begin_src sh
function sshtmuxattach {
  if [[ $# -ne 2 || -z "$1" || -z "$2" ]] ; then
      printf "Usage: ${FUNCNAME[0]} <Host> <Session>\n"
      printf "SSH into HOST and attach to Tmux SESSION.\n"
      return 1
  fi
  local host=$1;
  local session=$2
  ssh "$host" -t tmux attach -t "$session"
}
#+end_src

Convert to MP4.

#+name: org_gcr_2018-05-10T19-26-44-05-00_mara_42653A75-6426-442C-B443-DFC5F8EF7FF1
#+begin_src sh
function convert2mp4 {
  if [[ $# -ne 2 || -z "$1" || -z "$2" ]] ; then
      printf "Usage: ${FUNCNAME[0]} <Source> <Destination>\n"
      printf "Use ffmpeg to convert any SOURCE to a DESTINATION mp4.\n"
      return 1
  fi
  local source=$1;
  local destination=$2
  ssh "$host" -t tmux attach -t "$session"
  ffmpeg -i "$source" -c:a aac -b:a 128k -c:v libx264 -crf 23 "$destination"
}
#+end_src
*** BashLogout
:PROPERTIES:
:header-args: :tangle ./.bash_logout
:ID:       org_gcr_2017-05-12_mara:04FEFF46-AAC6-4AB8-9876-199B271DA565
:END:

#+NAME: org_gcr_2017-05-12_mara_D13E029E-8D74-48EB-965E-74828C36B68A
#+BEGIN_SRC sh :comments no
# -*- mode: sh; -*-
#+END_SRC

Farewell.

#+NAME: org_gcr_2017-05-12_mara_16299394-BEC8-40E0-946C-AF75251006C0
#+BEGIN_SRC sh
printf 'Sayonara.\n' && sleep 1
#+END_SRC
