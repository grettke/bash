# -*- mode: sh; -*-

function gcrbashcheck {
  local expected_major=5
  local expected_minor=1
  local actual_major="${BASH_VERSINFO[0]}"
  local actual_minor="${BASH_VERSINFO[1]}"
  printf "Using Bash %s\n" "$BASH_VERSION"
  if [[ $actual_major -gt $expected_major ]]; then
    return
  elif [[ $actual_major -eq $expected_major && $actual_minor -ge $expected_minor ]]; then
    return
  else
    printf "\e[31mFYI: Using Bash v%s.%s but expecting Bash >= v%s.%s\e[0m\n" "$actual_major" "$actual_minor" "$expected_major" "$expected_minor" 1>&2
  fi
}
gcrbashcheck
set -o braceexpand
set +o keyword
set +o errexit
set -o pipefail
shopt -s failglob
shopt -s shift_verbose
set +o allexport
set -o errtrace
set -o functrace
shopt -s cdable_vars
shopt -u localvar_inherit
shopt -s localvar_unset
set -o monitor
set -o notify
shopt -u extdebug
set -o noclobber
# set -o nounset
export TMPDIR="/tmp"
set -o hashall
shopt -s checkhash
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LC_COLLATE="POSIX"
function gcrencodingcheck {
  if [ "$(locale charmap)" == "UTF-8" ]; then
    printf "Character encoding expected to be 'UTF-8' and found it to be: CORRECT.\n"
  else
    printf "Character encoding expected to be 'UTF-8' and found it to be: INCORRECT as %s.\n" "$(locale charmap)"
  fi
}
gcrencodingcheck
export FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig

if [ "$PS1" ]; then
  printf "Expected a non-interactive shell. 0F4DD650-97C5-492A-BCDD-8D74DBD8AAD0\n" 1>&2
  exit 1
fi
unset -f read select
shopt -u expand_aliases
